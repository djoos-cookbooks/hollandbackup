#
# /etc/holland/backupsets/<%= @resource.name %>.conf
#
# (http://docs.hollandbackup.org/config.html)
#
# Generated by Chef for <%= node[:fqdn] %>
#

[holland:backup]
plugin = <%= @resource.plugin %>
backups-to-keep = <%= @resource.backups_to_keep %>
estimated-size-factor = <%= @resource.estimated_size_factor %>
auto-purge-failures = <%= @resource.auto_purge_failures %>
purge-policy = <%= @resource.purge_policy %>
<% unless @resource.before_backup_command.nil? %>
before-backup-command = <%= @resource.before_backup_command %>
<% end %>
<% unless @resource.after_backup_command.nil? %>
after-backup-command = <%= @resource.after_backup_command %>
<% end %>
<% unless @resource.failed_backup_command.nil? %>
failed-backup-command = <%= @resource.failed_backup_command %>
<% end %>

# This section defines the configuration options specific to the backup
# plugin. In other words, the name of this section should match the name
# of the plugin defined above.
<% unless @resource.mysqldump.nil? %>
<%= render "mysqldump.partial.erb", :variables => {
    :mysql_binpath => @resource.mysqldump.key?("mysql_binpath")? @resource.mysqldump.mysql_binpath : nil,
    :lock_method => @resource.mysqldump.key?("lock_method")? @resource.mysqldump.lock_method : nil,
    :exclude_invalid_views => @resource.mysqldump.key?("exclude_invalid_views")? @resource.mysqldump.exclude_invalid_views : nil,
    :dump_routines => @resource.mysqldump.key?("dump_routines")? @resource.mysqldump.dump_routines : nil,
    :dump_events => @resource.mysqldump.key?("dump_events")? @resource.mysqldump.dump_events : nil,
    :stop_slave => @resource.mysqldump.key?("stop_slave")? @resource.mysqldump.stop_slave : nil,
    :bin_log_position => @resource.mysqldump.key?("bin_log_position")? @resource.mysqldump.bin_log_position : nil,
    :flush_logs => @resource.mysqldump.key?("flush_logs")? @resource.mysqldump.flush_logs : nil,
    :file_per_database => @resource.mysqldump.key?("file_per_database")? @resource.mysqldump.file_per_database : nil,
    :additional_options => @resource.mysqldump.key?("additional_options")? @resource.mysqldump.additional_options : nil,
    :extra_defaults => @resource.mysqldump.key?("extra_defaults")? @resource.mysqldump.extra_defaults : nil,
    :estimate_method => @resource.mysqldump.key?("estimate_method")? @resource.mysqldump.estimate_method : nil,
    :databases => (@resource.mysqldump.key?("filtering") && @resource.mysqldump.filtering.key?("databases"))? @resource.mysqldump.filtering.databases : nil,
    :exclude_databases => (@resource.mysqldump.key?("filtering") && @resource.mysqldump.filtering.key?("exclude_databases"))? @resource.mysqldump.filtering.exclude_databases : nil,
    :tables => (@resource.mysqldump.key?("filtering") && @resource.mysqldump.filtering.key?("tables"))? @resource.mysqldump.filtering.tables : nil,
    :exclude_tables => (@resource.mysqldump.key?("filtering") && @resource.mysqldump.filtering.key?("exclude_tables"))? @resource.mysqldump.filtering.exclude_tables : nil,
    :method => (@resource.mysqldump.key?("compresssion") && @resource.mysqldump.compresssion.key?("method"))? @resource.mysqldump.compresssion.method : nil,
    :inline => (@resource.mysqldump.key?("compresssion") && @resource.mysqldump.compresssion.key?("inline"))? @resource.mysqldump.compresssion.inline : nil,
    :level => (@resource.mysqldump.key?("compresssion") && @resource.mysqldump.compresssion.key?("level"))? @resource.mysqldump.compresssion.level : nil,
    :bin_path => (@resource.mysqldump.key?("compresssion") && @resource.mysqldump.compresssion.key?("bin_path"))? @resource.mysqldump.compresssion.bin_path : nil,
    :defaults_extra_file => (@resource.mysqldump.key?("mysql_connection") && @resource.mysqldump.mysql_connection.key?("defaults_extra_file"))? @resource.mysqldump.mysql_connection.defaults_extra_file : nil,
    :user => (@resource.mysqldump.key?("mysql_connection") && @resource.mysqldump.mysql_connection.key?("user"))? @resource.mysqldump.mysql_connection.user : nil,
    :password => (@resource.mysqldump.key?("mysql_connection") && @resource.mysqldump.mysql_connection.key?("password"))? @resource.mysqldump.mysql_connection.password : nil,
    :socket => (@resource.mysqldump.key?("mysql_connection") && @resource.mysqldump.mysql_connection.key?("socket"))? @resource.mysqldump.mysql_connection.socket : nil,
    :host => (@resource.mysqldump.key?("mysql_connection") && @resource.mysqldump.mysql_connection.key?("host"))? @resource.mysqldump.mysql_connection.host : nil,
    :port => (@resource.mysqldump.key?("mysql_connection") && @resource.mysqldump.mysql_connection.key?("port"))? @resource.mysqldump.mysql_connection.port : nil
} %>
<% end %>